
using git
version control 

scrum during team project: 



all properties and tracks are kept in .git hidden folder
*git status: changed file or line
*ls -la    = hidden files included



To add in track:
intialize:	        git init
connect with github:    git remote add origin  <repository link>
add files:  		git add filename
add all:  		git .
commit:  		git commit -m "say something"
push:  			git push origin master
change remote's url:    git remote set-url origin https://github.com/USERNAME/REPOSITORY.git
see remote:  		git remote -v
show all commit lists:  git log  
pull a repo:		git pull <repo link>
to go to the previous	git checkout 55d29937  (1st 6 ids) 
commits: (Not Sure)




short cut command: 
*git add.
all untracked file adds.
staging means adding or tracking 
unstage means removing/ untrack



*git commit -am "Initial commit"  = we can add message in git commit 

adding we are bringing everything in a platform.
with commit we will approve it as a part of the project



after changing again we have to add and commit

*git log  = show all commit lists

*git checkout 55d29937  (1st 6 ids)
to go to the previous commits


the text file will be uploaded to the previous commit. Will show only to the log.
but we can git checkout and go to previous version



#marktex  , Latex  report submit

if we upload from local host the dont add balsal


to clone:
go to some repository , we will clone and copy that link
*git clone link

we are cloning that project to our repository  and the editing according to ours. 

first we need to pull then we have to push

git fire to emergency save

*git checkout -b new_feature_A    = to create a new branch and move to that branch
to merge two branch
1st go to master branch
then merge another branch to this branch
*git merge new_feature_A



